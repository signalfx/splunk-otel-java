name: Nightly build

on:
  schedule:
    - cron: "24 5 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11.0.11+9

      - name: Build and test
        run: ./gradlew build --scan --no-daemon

  setup-muzzle-matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11.0.11+9

      - id: set-matrix
        run: echo "::set-output name=matrix::{\"module\":[\"$(./gradlew -q instrumentation:listMuzzleInstrumentations | xargs echo | sed 's/ /","/g')\"]}"

  muzzle:
    needs: setup-muzzle-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{fromJson(needs.setup-muzzle-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11.0.11+9

      - name: Run muzzle
        # using retry because of sporadic gradle download failures
        uses: nick-invision/retry@v2.5.1
        with:
          # timing out has not been a problem, these jobs typically finish in 2-3 minutes
          timeout_minutes: 15
          max_attempts: 3
          command: ./gradlew ${{ matrix.module }}:muzzle --stacktrace --no-daemon

  issue:
    name: Open issue on failure
    needs: [ build, muzzle ]
    runs-on: ubuntu-20.04
    permissions:
      issues: write
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2.2

      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - uses: JasonEtco/create-an-issue@v2.6
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/workflows/nightly-failed.template
