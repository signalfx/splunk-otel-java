import nebula.plugin.release.git.opinion.Strategies

plugins {
  id "java"
  id "com.diffplug.spotless" version "5.2.0" apply false
  id "nebula.release" version "15.0.1"
}

release {
  defaultVersionStrategy = Strategies.getSNAPSHOT()
}

group = "com.splunk.public"

boolean snapshot = getProperty("snapshot") == 'yes'

def versions = [
    'opentelemetry'              : snapshot ? "1.1.0-SNAPSHOT"       : "1.0.0",
    'opentelemetryAlpha'         : snapshot ? "1.1.0-alpha-SNAPSHOT" : "1.0.0-alpha",
    'opentelemetryJavaagent'     : snapshot ? "1.1.0-SNAPSHOT"       : '1.0.0',
    'opentelemetryJavaagentAlpha': snapshot ? "1.1.0-alpha-SNAPSHOT" : '1.0.0-alpha',
    'mockito'                    : '3.8.0',
    'jupiter'                    : '5.7.1'
]

subprojects {
  version = rootProject.version

  apply plugin: 'java'
  apply plugin: 'com.diffplug.spotless'
  apply from: "$rootDir/gradle/spotless.gradle"

  it.ext['versions'] = versions

  repositories {
    mavenLocal()
    maven {
      url = uri("https://dl.bintray.com/open-telemetry/maven")
    }
    mavenCentral()
    maven {
      url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
  }

  dependencies {
    testImplementation("org.mockito:mockito-core:${versions.mockito}")
    testImplementation("org.mockito:mockito-junit-jupiter:${versions.mockito}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${versions.jupiter}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${versions.jupiter}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${versions.jupiter}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${versions.jupiter}")
  }

  tasks {
    test {
      useJUnitPlatform()
      reports {
        junitXml.outputPerTestCase = true
      }
    }
  }

  tasks.withType(JavaCompile) {
    options.deprecation = true
  }
}

