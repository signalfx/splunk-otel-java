plugins {
  id 'java'
  id "com.github.johnrengelman.shadow"
}

apply from: "$rootDir/gradle/shadow.gradle"

def relocatePackages = ext.relocatePackages

dependencies {
  compileOnly(project(":bootstrap"))
  compileOnly("io.opentelemetry:opentelemetry-sdk:${versions.opentelemetry}")
  compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:${versions.opentelemetryAlpha}")
  compileOnly("io.opentelemetry:opentelemetry-semconv:${versions.opentelemetryAlpha}")
  compileOnly("io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:${versions.opentelemetryJavaagentAlpha}")
  compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:${versions.opentelemetryJavaagentAlpha}")
  annotationProcessor deps.autoservice
  compileOnly deps.autoservice

  implementation("io.opentelemetry:opentelemetry-exporter-jaeger-thrift:${versions.opentelemetry}")
  implementation("io.jaegertracing:jaeger-client:1.5.0")

  compileOnly("io.micrometer:micrometer-core:${versions.micrometer}")
  implementation("io.micrometer:micrometer-registry-signalfx:${versions.micrometer}") {
    // bootstrap already has micrometer-core
    exclude(group: 'io.micrometer', module: 'micrometer-core')
  }

  testImplementation("io.opentelemetry:opentelemetry-sdk:${versions.opentelemetry}")
  testImplementation("io.opentelemetry:opentelemetry-sdk-testing:${versions.opentelemetry}")
  testImplementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:${versions.opentelemetryAlpha}")
  testImplementation("io.opentelemetry.instrumentation:opentelemetry-instrumentation-api:${versions.opentelemetryJavaagentAlpha}")
  testImplementation("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:${versions.opentelemetryJavaagentAlpha}")
  testImplementation("io.micrometer:micrometer-core:${versions.micrometer}")

  testImplementation(project(':testing:common'))
  testImplementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
  testImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '8.0.0.v20110901'
  testImplementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '8.0.0.v20110901'
}

tasks {
  compileJava {
    options.release.set(8)
  }

  processResources {
    expand([
        'version': project.version
    ])
  }

  shadowJar {
    mergeServiceFiles()

    exclude("**/module-info.class")

    relocatePackages(it)
  }
}