- class: com.splunk.opentelemetry.instrumentation.nocode.NocodeInstrumentationTest$SampleClass
  method:
    or:
      - name: willNotMatch
      - name: doSomething
  span_name: "this.getName()"
  attributes:
    - key: "details"
      value: this.getDetails()
    - key: "map.size"
      value: this.getMap().entrySet().size()
    - key: "map.isEmpty"
      value: this.getMap().isEmpty()
    - key: getFloat
      value: this.getFloat()
    - key: getDouble
      value: this.getDouble()
    - key: getLong
      value: this.getLong()
    - key: getShort
      value: this.getShort()
    - key: getByte
      value: this.getByte()

- class:
    and:
      - super_type: com.splunk.opentelemetry.instrumentation.nocode.NocodeInstrumentationTest$SampleClass
      - or:
        - name: something.that.will.not.match.but.trivially.tests.the.or.Logic
        - name_regex: .*nocode.*
  method:
    and:
      - name_regex: throwExcept.*
      - parameter_count: 1
      - parameter:
          index: 0
          type: int
  span_kind: SERVER
  attributes:
    - key: "five"
      value: param0.toString().substring(0)

- class:
    and:
      - name_regex: .*nocode.*SampleClass
      - super_type: java.lang.Object
  method:
     and:
       - and:
           - not:
               name: noSuchMethod
           - name_regex: ech[o]?
       - parameter_count: 1
       - parameter:
           index: 0
           type: boolean
  span_status: 'returnValue.booleanValue() ? "ERROR" : "OK"'


- class: com.splunk.opentelemetry.instrumentation.nocode.NocodeInstrumentationTest$SampleClass
  method: doInvalidRule
  span_name: "this.thereIsNoSuchMethod()"
  span_kind: INVALID
  span_status: invalid jexl that does not parse
  attributes:
    - key: "notpresent"
      value: "invalid.noSuchStatement()"

